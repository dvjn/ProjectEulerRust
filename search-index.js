var searchIndex = JSON.parse('{\
"project_euler":{"doc":"","t":[13,4,13,11,11,11,11,5,11,11,11,11,14,11,11,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,5,5,11,11,5,11,11,5,11,5,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["Open","ProjectEulerCli","Solve","augment_clap","borrow","borrow_mut","clap","copy_to_clipboard","fmt","from","from_clap","from_subcommand","include_problems","into","is_subcommand","open_url","problem_0001","problem_0002","problem_0003","problem_0004","problem_0005","problem_0006","problem_0007","problem_0008","problem_0009","problem_0010","problem_0011","problem_0012","problem_0013","problem_0014","problem_0015","problem_0016","problem_0017","problem_0018","problem_0019","problem_0020","problem_0021","problem_0022","problem_0023","problem_0024","problem_0025","problem_0026","problem_0027","problem_0028","problem_0029","problem_0067","solve_problem","try_from","try_into","type_id","problem","problem","solve","sum_of_multiples_of_3_and_5","solve","sum_of_even_fibonacci_numbers","largest_prime_factor","solve","is_palindrome","largest_palindrome_product","solve","combine_factor_maps","get_factor_map","smallest_multiple","solve","difference_of_sums_squared_and_squared_sums","solve","sum_of_natural_numbers","sum_of_squared_natural_numbers","nth_prime","solve","largest_product_of_adjacent_digits","solve","product_of_pythagorean_triplet_with_sum","solve","solve","sum_of_primes","get_indices_product","largest_product_in_grid","solve","first_triangular_number_with_over_n_factors","get_n_factors","solve","digits_of_large_sum","solve","get_collatz_length","longest_collatz_sequence_below","solve","number_of_lattice_paths","number_of_square_lattice_paths","solve","solve","sum_of_digits_of_2s_power","get_number_letter_counts","get_ordered_number_letter_counts","number_letter_counts_upto","solve","maximum_path_sum","read_triangle","solve","Day","add","borrow","borrow_mut","clone","clone_into","eq","fmt","from","get_first_day_of_year","get_sundays_on_first","hash","into","is_leap","ne","rem","solve","sub","sundays_on_first_of_the_month","to_owned","try_from","try_into","type_id","solve","sum_of_digits_of_factorial","get_proper_divisors","get_proper_divisors_sum","solve","sum_of_amicable_numbers","get_name_worth","name_scores","solve","non_abundant_sums","solve","get_nth_lexicographic_permutation","solve","get_first_fibonacci_with_n_digits","solve","get_longest_recurring_unit_fraction","solve","quadratic_coefficients_product_producing_max_primes","solve","solve","sum_of_diagonals_of_spiral","match_hashmap","solve","terms_of_sequence_by_power","solve"],"q":["project_euler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","project_euler::ProjectEulerCli","","project_euler::problem_0001","","project_euler::problem_0002","","project_euler::problem_0003","","project_euler::problem_0004","","","project_euler::problem_0005","","","","project_euler::problem_0006","","","","project_euler::problem_0007","","project_euler::problem_0008","","project_euler::problem_0009","","project_euler::problem_0010","","project_euler::problem_0011","","","project_euler::problem_0012","","","project_euler::problem_0013","","project_euler::problem_0014","","","project_euler::problem_0015","","","project_euler::problem_0016","","project_euler::problem_0017","","","","project_euler::problem_0018","","","project_euler::problem_0019","","","","","","","","","","","","","","","","","","","","","","","project_euler::problem_0020","","project_euler::problem_0021","","","","project_euler::problem_0022","","","project_euler::problem_0023","","project_euler::problem_0024","","project_euler::problem_0025","","project_euler::problem_0026","","project_euler::problem_0027","","project_euler::problem_0028","","project_euler::problem_0029","","","project_euler::problem_0067"],"d":["","","","","","","","","","","","","","","","Opens the URL on the default browser of this platform","Multiples of 3 and 5","Even Fibonacci numbers","Largest prime factor","Largest palindrome product","Smallest multiple","Sum square difference","10001st prime","Largest product in a series","Special Pythagorean triplet","Summation of primes","Largest product in a grid","Highly divisible triangular number","Large sum","Longest Collatz sequence","Lattice paths","Power digit sum","Number letter counts","Maximum path sum I","Counting Sundays","Factorial digit sum","Amicable numbers","Names scores","Non-abundant sums","Lexicographic permutations","1000-digit Fibonacci number","Reciprocal cycles","Quadratic primes","Number spiral diagonals","Distinct powers","Maximum path sum II","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,0,0,4,4,0,4,4,0,4,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[["app",3]],["app",3]],[[]],[[]],[[],["app",3]],[[["string",3]],[["box",3],["result",4]]],[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]]],[[],["option",4]],null,[[]],[[],["bool",15]],[[["str",15]],[["error",3],["result",4],["output",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["bool",15]],[[["u32",15]],["u64",15]],[[],["u64",15]],[[["usize",15],["hashmap",3],["u64",15]],[["usize",15],["hashmap",3],["u64",15]]],[[["u64",15]],[["usize",15],["hashmap",3],["u64",15]]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["usize",15]],["u64",15]],[[],["u64",15]],[[["usize",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["vec",3]],["u64",15]],[[["usize",15]],["u64",15]],[[],["u64",15]],[[["usize",15]],["u64",15]],[[["u64",15]],["usize",15]],[[],["u64",15]],[[["usize",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["usize",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15],["str",15]],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["vec",3],["vec",3]],["u64",15]],[[["str",15]],[["vec",3],["vec",3]]],[[],["u64",15]],null,[[["day",3]],["day",3]],[[]],[[]],[[],["day",3]],[[]],[[["day",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["u16",15]],["day",3]],[[["u16",15]],["u64",15]],[[]],[[]],[[["u16",15]],["bool",15]],[[["day",3]],["bool",15]],[[],["day",3]],[[],["u64",15]],[[["day",3]],["day",3]],[[["u16",15]],["u64",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],[["u64",15],["hashset",3]]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["str",15]],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["usize",15],["u64",15],["vec",3]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]],[[["u64",15]],["i64",15]],[[],["i64",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[["hashmap",3]],["bool",15]],[[],["u64",15]],[[["u64",15]],["u64",15]],[[],["u64",15]]],"p":[[4,"ProjectEulerCli"],[13,"Open"],[13,"Solve"],[3,"Day"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};